const express = require("express");
const router = express.Router();
const Person = require('./../models/person');

router.post("/", async (req, res) => {
    try {
        const data = req.body;//create a new object of person class with data from

        // Create a new person document using the mongoose model
        const newPerson = new Person(data);//but by this way it prefilled 

        // newPerson.name=data.name;// we can define this way also by each data member sepreately 

        //save the person to the database
        const responce = await newPerson.save();
        console.log('data saved');
        res.status(200).json(responce);

    }
    catch (err) {
        console.error(err.message);
        res.status(500).json({ error: "internal server error" });
    }
})

//GET method to get the person 
router.get('/', async (req, res) => {
    try {
        const data = await Person.find();
        console.log("Data fatched");
        res.status(200).json(data);
    } catch (err) {
        console.error(err.message);
        res.status(500).json({ error: "internal server error" });
    }
})

//get the specific persons by there work type
router.get('/:workType', async (req, res) => {
    try {
        const workType = req.params.workType; // Extract the work type from URL parameter and trim any extra whitespace

        if (['chef', 'waiter', 'manager'].includes(workType)) {
            const response = await Person.find({ work: workType });
            console.log("Response fetched for workType:", workType);
            res.status(200).json(response);
        } else {
            console.log("Invalid Work Type:", workType);
            res.status(400).json({ error: "Invalid Work Type" });
        }
    } catch (err) {
        console.error("Error fetching data:", err.message);
        res.status(500).json({ error: "Internal Server Error" });
    }
});


// PUT
// Uppdation in the excited record 
router.put('/:name', async (req, res) => {
    try {
        const personId = req.params.name; //Extract the id from the url parameter
        const updatePerson = req.body; //Get the json object which contains the details of the person to be updated
        const response = await Person.findByIdAndUpdate(personId, updatePerson, //Find the user with that id and update it with new details
            {
                new: true, //return the updated documnet
                runValidators: true,//run mongoose validation
            });
        if (!response) {
            return res.status(404).json({ error: 'person not found' });
        }
        console.log("Data updated");
        res.status(200).json(response);

    } catch (err) {
        console.error(err);
        res.status(500).json({ error: "Internal Server Error" });
    }
});


// Delete
router.delete("/:id", async (req, res) => {
    try {
        const personId = req.params.id;
        const response = await Person.findByIdAndDelete(personId);
        if (!response) {
            return res.status(404).json({ error: "Person Not Found!" });
        }
        console.log("Data Deleted ");
        res.status(200).json({message: "Person Deleted"});

    } catch (err) {
        console.error("Error fetching data:", err.message);
        res.status(500).json({ error: "Internal Server Error" });
    }
});

    module.exports = router;